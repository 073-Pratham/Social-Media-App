generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  profilePicture String? 
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  followers Follow[] @relation("followers")
  following Follow[] @relation("following")
  createdAt DateTime @default(now())
}

model Post {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  text      String?
  mediaUrl  String?
  comments  Comment[]
  likes     Like[]
  postTags  PostTag[]
  createdAt DateTime  @default(now())
}

model Comment {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  text      String
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Follow {
  id           String   @id @default(uuid())
  follower     User     @relation("following", fields: [followerId], references: [id])
  followerId   String
  following    User     @relation("followers", fields: [followingId], references: [id])
  followingId  String
  createdAt    DateTime @default(now())

  @@unique([followerId, followingId])
}

model Tag {
  id      String   @id @default(uuid())
  name    String   @unique
  postTags PostTag[]
}

model PostTag {
  post   Post   @relation(fields: [postId], references: [id])
  postId String
  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  String

  @@id([postId, tagId])
}
